#Get parties results from Canton
mydb <- connectDB(db_name = "sda_elections")
rs <-
dbSendQuery(
mydb,
paste0(
"SELECT * FROM candidates_results WHERE date = '2023-10-22' AND elected = 1" #CHANGE TO elected = 1
)
)
elected_candidates_overall <- fetch(rs, n = -1)
dbDisconnectAll()
#Get elected candidates
elected_candidates_overall <- elected_candidates_overall %>%
#mutate(area_id = canton) %>%  #REMOVE!
#filter(is.na(source_update)) %>% #REMOVE!
left_join(people_metadata, join_by(person_id == id)) %>%
left_join(parties_metadata, join_by (party_id == id)) %>%
left_join(people_profession, join_by (person_id == person_id)) %>%
left_join(areas_metadata, join_by (area_id == area_ID))
#filter(is.na(picture) == FALSE) #REMOVE!
#Make random selection for Testing
#elected_candidates_overall <- elected_candidates_overall[sample(1:nrow(elected_candidates_overall),246),] #REMOVE!
#Transform Data
elected_candidates_overall <- elected_candidates_overall %>%
mutate(Name = paste0(firstname," ",lastname),
Bild = paste0("https://164.ch/grafiken_wahlen2023/Nationalrat/",picture),
`Bisher/Neu` = ifelse(status==2,"Bisher","Neu"),
Alter = round2(as.numeric(difftime(Sys.Date(),birthdate, units = "weeks"))/52.25),
Rat = ifelse(council == "NR","Nationalrat","Ständerat")
) %>%
rename(Beruf = title,
Wohnort = place,
Kanton = area_name_de,
Partei = shortname_de
) %>%
select(Name,Bild,Kanton,`Bisher/Neu`,Beruf,Wohnort,Alter,Partei,Rat)
View(elected_candidates_overall)
#Get parties results from Canton
mydb <- connectDB(db_name = "sda_elections")
rs <-
dbSendQuery(
mydb,
paste0(
"SELECT * FROM candidates_results WHERE date = '2023-10-22' AND elected = 1" #CHANGE TO elected = 1
)
)
elected_candidates_overall <- fetch(rs, n = -1)
dbDisconnectAll()
#Get elected candidates
elected_candidates_overall <- elected_candidates_overall %>%
#mutate(area_id = canton) %>%  #REMOVE!
#filter(is.na(source_update)) %>% #REMOVE!
left_join(people_metadata, join_by(person_id == id)) %>%
left_join(parties_metadata, join_by (party_id == id)) %>%
left_join(people_profession, join_by (person_id == person_id)) %>%
left_join(areas_metadata, join_by (area_id == area_ID))
#filter(is.na(picture) == FALSE) #REMOVE!
View(elected_candidates_overall)
#Get parties results from Canton
mydb <- connectDB(db_name = "sda_elections")
rs <-
dbSendQuery(
mydb,
paste0(
"SELECT * FROM candidates_results WHERE date = '2023-10-22' AND elected = 1" #CHANGE TO elected = 1
)
)
elected_candidates_overall <- fetch(rs, n = -1)
dbDisconnectAll()
#Get elected candidates
elected_candidates_overall <- elected_candidates_overall %>%
#mutate(area_id = canton) %>%  #REMOVE!
#filter(is.na(source_update)) %>% #REMOVE!
left_join(people_metadata, join_by(person_id == id)) %>%
left_join(parties_metadata, join_by (party_id == id)) %>%
left_join(people_profession, join_by (person_id == person_id)) %>%
left_join(areas_metadata, join_by (area_id == area_ID)) %>%
mutate(picture = ifelse(is.na(picture),
"Replacement.jpg",
picture
))
View(picture)
View(elected_candidates_overall)
#Get parties results from Canton
mydb <- connectDB(db_name = "sda_elections")
rs <-
dbSendQuery(
mydb,
paste0(
"SELECT * FROM candidates_results WHERE date = '2023-10-22' AND elected = 1" #CHANGE TO elected = 1
)
)
elected_candidates_overall <- fetch(rs, n = -1)
dbDisconnectAll()
#Get elected candidates
elected_candidates_overall <- elected_candidates_overall %>%
#mutate(area_id = canton) %>%  #REMOVE!
#filter(is.na(source_update)) %>% #REMOVE!
left_join(people_metadata, join_by(person_id == id)) %>%
left_join(parties_metadata, join_by (party_id == id)) %>%
left_join(people_profession, join_by (person_id == person_id)) %>%
left_join(areas_metadata, join_by (area_id == area_ID)) %>%
mutate(picture = ifelse(is.na(picture),
"Replacement.jpg",
picture
))
#filter(is.na(picture) == FALSE) #REMOVE!
#Make random selection for Testing
#elected_candidates_overall <- elected_candidates_overall[sample(1:nrow(elected_candidates_overall),246),] #REMOVE!
#Transform Data
elected_candidates_overall <- elected_candidates_overall %>%
mutate(Name = paste0(firstname," ",lastname),
Bild = paste0("https://164.ch/grafiken_wahlen2023/Nationalrat/",picture),
`Bisher/Neu` = ifelse(status==2,"Bisher","Neu"),
Alter = round2(as.numeric(difftime(Sys.Date(),birthdate, units = "weeks"))/52.25),
Rat = ifelse(council == "NR","Nationalrat","Ständerat")
) %>%
rename(Beruf = title,
Wohnort = place,
Kanton = area_name_de,
Partei = shortname_de
) %>%
select(Name,Bild,Kanton,`Bisher/Neu`,Beruf,Wohnort,Alter,Partei,Rat)
View(elected_candidates_overall)
library(git2r)
library(httr)
library(XML)
library(xlsx)
library(jsonlite)
library(dplyr)
library(readr)
library(stringi)
library(stringr)
library(DatawRappr)
library(lubridate)
#Working Directory
setwd("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed")
#Main Data URL from BFS
BFS_API_URL <-
"https://ckan.ogdch-abnahme.clients.liip.ch/api/3/action/package_show?id=eidg-wahlen-2023"
#BFS_API_URL <- "https://ckan.opendata.swiss/api/3/action/package_show?id=eidg-wahlen-2023"
#Datawrapper Auth
datawrapper_auth(Sys.getenv("DW_KEY"), overwrite = TRUE)
#Functions
setwd("./Functions")
source("storyfinder.R")
source("storyfinder_urlena.R")
source("storybuilder.R")
source("add_texts.R")
source("replace_variables_urlena.R")
source("replace_variables_cleanup.R")
source("replace_variables_cleanup_SR.R")
source("winners_losers.R")
source("voted_out_candidates.R")
source("text_charts.R")
source("create_tables_NR.R")
source("create_tables_SR.R")
source("create_tables_overview.R")
source("create_table_communities.R")
source("create_bilddaten.R")
source("create_visual_data.R")
source("function_reports.R")
source("github.R")
setwd("..")
source("./tools/Funktionen/Utils.R")
#Texts
texts_spreadsheet_NR_results <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Sitzverteilung")
texts_spreadsheet_NR_candidates <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Gewaehlte")
texts_spreadsheet_SR_candidates <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "SR_Resultate")
texts_spreadsheet_NR_intermediate <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Zwischenstand")
texts_spreadsheet_UrLena <- read.xlsx("./Texte/LENA Textbausteine Eidgenössische Wahlen 2023_ Gemeindeebene.xlsx", sheetName = "Textbausteine")
texts_spreadsheet_UrLena <- texts_spreadsheet_UrLena %>%
filter(is.na(Text_d) == FALSE)
#Metadata Communities
meta_gmd_kt <- read_csv("Data/MASTERFILE_GDE.csv")
#####START LOOP#####
#Flags
NR_new_results <- FALSE
NR_new_elected <- FALSE
SR_new_elected <- FALSE
#Load Databases
source("load_databases.R")
###Get BFS Data and update DB
source("NR_get_data_results.R")
#Load Databases again
source("load_databases.R")
#Set Flag
NR_new_results <- TRUE
source("All_prepare_results.R")
source("All_publish_charts.R")
source("All_create_output_parliament_flourish.R")
source("All_create_output_candidates_flourish.R")
###ZWISCHENSTAND (jeweils um x.35 Uhr)
source("NR_text_intermediate.R")
#Merge with area, text and output overview
counted_cantons_all <- counted_cantons_all  %>%
left_join(areas_metadata) %>%
left_join(status_texts) %>%
left_join(output_overview) %>%
filter(area_type == "canton")
##Check: Canton completed?
#Get counted cantons
counted_cantons_all <- election_metadata %>%
filter(date == "2023-10-22",
grepl("finished",status) == TRUE #CHANGE TO TRUE
)
#Merge with area, text and output overview
counted_cantons_all <- counted_cantons_all  %>%
left_join(areas_metadata) %>%
left_join(status_texts) %>%
left_join(output_overview) %>%
filter(area_type == "canton")
###NATIONALRAT###
counted_cantons <- counted_cantons_all %>%
filter(council == "NR")
###ZWISCHENSTAND (jeweils um x.35 Uhr)
source("NR_text_intermediate.R")
source("Communities_live_data.R")
source("Communities_live_data.R")
url_NR_voterturnout
View(results_NR_communities_voterturnout)
#Get URLs from API
response <-
GET(BFS_API_URL)
content <- httr::content(response)$result$resources
###GET RESULTS DATA###
url_NR_results <-
as.data.frame(do.call(rbind, content))$download_url[[1]]
###GET VOTERTURNOUT DATA###
url_NR_voterturnout <-
as.data.frame(do.call(rbind, content))$download_url[[4]]
###GET VOTERTURNOUT DATA###
url_NR_voterturnout <-
as.data.frame(do.call(rbind, content))$download_url[[4]]
#Get timestamp
timestamp_voterturnout <-
toString(as.POSIXlt(HEAD(url_NR_voterturnout)$date))
#Compare with old timestamp
timestamp_voterturnout_old <-
read.csv("./Timestamps/timestamp_voterturnout.txt", header = FALSE)[1, 1]
print("new voterturnout NR data downloaded!")
#Download data
setwd("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_daten")
download.file(url_voterturnout,
destfile = "data_NR_voterturnout.json",
method = "curl")
print("new voterturnout NR data downloaded!")
#Download data
setwd("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_daten")
download.file(url_NR_voterturnout,
destfile = "data_NR_voterturnout.json",
method = "curl")
setwd("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed")
source("Communities_live_data.R")
View(stand_ch)
###COMMIT###
git2r::config(user.name = "awp-finanznachrichten",user.email = "sw@awp.ch")
token <- read.csv("C:/Users/simon/OneDrive/Github_Token/token.txt",header=FALSE)[1,1]
###COMMIT###
git2r::config(user.name = "awp-finanznachrichten",user.email = "sw@awp.ch")
token <- read.csv("C:/Users/sw/OneDrive/Github_Token/token.txt",header=FALSE)[1,1]
git2r::cred_token(token)
gitadd()
gitcommit()
gitpush()
View(results_NR_communities)
View(overview_ch)
View(stand_ch)
###IT###
stand_ch$gemeinden_abgeschlossen
undertitel_de <- paste0("Letzte Aktualisierung: ",format(Sys.time(),"%d.%m.%Y %H:%M Uhr"),". ","Es sind <b>",stand_ch$gemeinden_abgeschlossen,"</b> von <b>",stand_ch$gemeinden_total,
"</b> Gemeinden ausgezählt.")
undertitel_fr <- paste0("dernière mise à jour: ",format(Sys.time(),"%d.%m.%Y %Hh%M"),". ","Les résultats de <b>",stand_ch$gemeinden_abgeschlossen,"</b> des <b>",stand_ch$gemeinden_total,
"</b> communes sont connus.")
undertitel_it <- paste0("Ultimo aggiornamento: ",format(Sys.time(),"%d.%m.%Y %H:%M"),". ","I risultati di <b>",stand_ch$gemeinden_abgeschlossen,"</b> dei <b>",stand_ch$gemeinden_total,
"</b> comuni sono noti.")
undertitel_de
library(DatawRappr)
###DE###
metadata <- dw_retrieve_chart_metadata(chart_id_text_de)
chart_id_text_de <- "3YqND"
chart_id_tabelle_de <- "9qTxY"
chart_id_text_fr <- "XQ32E"
chart_id_tabelle_fr <- "1PjhW"
chart_id_text_it <- "n1scm"
chart_id_tabelle_it <- "a3EW0"
###DE###
metadata <- dw_retrieve_chart_metadata(chart_id_text_de)
metadata$content$metadata$describe$intro
undertitel_de_text <- paste0(undertitel_de,'<br><span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
undertitel_de_text
###DE###
undertitel_de_text <- paste0(undertitel_de,'<br><span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_de,intro = undertitel_de_text)
chart_id_text_de <- "3YqND"
chart_id_tabelle_de <- "9qTxY"
chart_id_text_fr <- "XQ32E"
chart_id_tabelle_fr <- "1PjhW"
chart_id_text_it <- "n1scm"
chart_id_tabelle_it <- "a3EW0"
undertitel_de <- paste0("Letzte Aktualisierung: ",format(Sys.time(),"%H:%M Uhr"),". ","Es sind <b>",stand_ch$gemeinden_abgeschlossen,"</b> von <b>",stand_ch$gemeinden_total,
"</b> Gemeinden ausgezählt.")
undertitel_fr <- paste0("dernière mise à jour: ",format(Sys.time(),"%Hh%M"),". ","Les résultats de <b>",stand_ch$gemeinden_abgeschlossen,"</b> des <b>",stand_ch$gemeinden_total,
"</b> communes sont connus.")
undertitel_it <- paste0("Ultimo aggiornamento: ",format(Sys.time(),"%H:%M"),". ","I risultati di <b>",stand_ch$gemeinden_abgeschlossen,"</b> dei <b>",stand_ch$gemeinden_total,
"</b> comuni sono noti.")
###DE###
undertitel_de_text <- paste0(undertitel_de,'<br><span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_de,intro = undertitel_de_text)
dw_publish_chart(chart_id_text_de)
undertitel_de_tabelle <- paste0(undertitel_de,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_tabelle_de,intro = undertitel_de_text)
dw_publish_chart(chart_id_tabelle_de,)
chart_id_text_de <- "3YqND"
chart_id_tabelle_de <- "9qTxY"
chart_id_text_fr <- "XQ32E"
chart_id_tabelle_fr <- "1PjhW"
chart_id_text_it <- "n1scm"
chart_id_tabelle_it <- "a3EW0"
undertitel_de <- paste0("Letzte Aktualisierung: ",format(Sys.time(),"%H:%M Uhr"),". ","Es sind <b>",stand_ch$gemeinden_abgeschlossen,"</b> von <b>",stand_ch$gemeinden_total,
"</b> Gemeinden ausgezählt.")
undertitel_fr <- paste0("dernière mise à jour: ",format(Sys.time(),"%Hh%M"),". ","Les résultats de <b>",stand_ch$gemeinden_abgeschlossen,"</b> des <b>",stand_ch$gemeinden_total,
"</b> communes sont connus.")
undertitel_it <- paste0("Ultimo aggiornamento: ",format(Sys.time(),"%H:%M"),". ","I risultati di <b>",stand_ch$gemeinden_abgeschlossen,"</b> dei <b>",stand_ch$gemeinden_total,
"</b> comuni sono noti.")
###DE###
undertitel_de_text <- paste0(undertitel_de,'<br><span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_de,intro = undertitel_de_text)
dw_publish_chart(chart_id_text_de)
undertitel_de_tabelle <- paste0(undertitel_de,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_tabelle_de,intro = undertitel_de_tabelle)
dw_publish_chart(chart_id_tabelle_de)
chart_id_text_de <- "3YqND"
chart_id_tabelle_de <- "9qTxY"
chart_id_text_fr <- "XQ32E"
chart_id_tabelle_fr <- "1PjhW"
chart_id_text_it <- "n1scm"
chart_id_tabelle_it <- "a3EW0"
undertitel_de <- paste0("Letzte Aktualisierung: ",format(Sys.time(),"%H:%M Uhr"),". ","Es sind <b>",stand_ch$gemeinden_abgeschlossen,"</b> von <b>",stand_ch$gemeinden_total,
"</b> Gemeinden ausgezählt.")
undertitel_fr <- paste0("dernière mise à jour: ",format(Sys.time(),"%Hh%M"),". ","Les résultats de <b>",stand_ch$gemeinden_abgeschlossen,"</b> des <b>",stand_ch$gemeinden_total,
"</b> communes sont connus.")
undertitel_it <- paste0("Ultimo aggiornamento: ",format(Sys.time(),"%H:%M"),". ","I risultati di <b>",stand_ch$gemeinden_abgeschlossen,"</b> dei <b>",stand_ch$gemeinden_total,
"</b> comuni sono noti.")
###DE###
undertitel_de_text <- paste0(undertitel_de,'<br><span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_de,intro = undertitel_de_text)
dw_publish_chart(chart_id_text_de)
undertitel_de_tabelle <- paste0(undertitel_de,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/3YqND/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;Texte&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/9qTxY/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> Tabellen</a> &nbsp;
</span>')
dw_edit_chart(chart_id_tabelle_de,intro = undertitel_de_tabelle)
dw_publish_chart(chart_id_tabelle_de)
###FR###
undertitel_fr_text <- paste0(undertitel_fr,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/XQ32E/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;textes&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/1PjhW/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> &nbsp;&nbsp;tables&nbsp;&nbsp;</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_fr,intro = undertitel_fr_text)
dw_publish_chart(chart_id_text_fr)
undertitel_fr_tabelle <- paste0(undertitel_fr,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/XQ32E/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;textes&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/1PjhW/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> &nbsp;&nbsp;tables&nbsp;&nbsp;</a> &nbsp;
</span>')
dw_edit_chart(chart_id_tabelle_fr,intro = undertitel_fr_tabelle)
dw_publish_chart(chart_id_tabelle_fr)
###IT###
undertitel_it_text <- paste0(undertitel_it,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/XQ32E/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;testi&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/1PjhW/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> &nbsp;&nbsp;tavoli&nbsp;&nbsp;</a> &nbsp;
</span>')
dw_edit_chart(chart_id_text_it,intro = undertitel_it_text)
dw_publish_chart(chart_id_text_it)
undertitel_it_tabelle <- paste0(undertitel_it,'<br>
<span style="line-height:30px">
<a target="_self" href="https://datawrapper.dwcdn.net/XQ32E/" style="background:#808080; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer">&nbsp;&nbsp;
testi&nbsp;&nbsp;</a> &nbsp;
<a target="_self" href="https://datawrapper.dwcdn.net/1PjhW/" style="background:#429ddd; padding:4px 6px; border-radius:5px; color:#ffffff; font-weight:400; box-shadow:0px 0px 7px 2px rgba(0,0,0,0.07); cursor:pointer;" rel="nofollow noopener noreferrer"> &nbsp;&nbsp;tavoli&nbsp;&nbsp;</a> &nbsp;
</span>')
dw_edit_chart(chart_id_tabelle_it,intro = undertitel_it_tabelle)
dw_publish_chart(chart_id_tabelle_it)
source("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed/Functions/create_table_communities.R")
source("Communities_live_data.R")
source("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed/Functions/create_tables_NR.R")
source("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed/Functions/create_table_communities.R")
source("Communities_live_data.R")
source("Communities_publish_charts.R")
View(nationalrat_gemeinden_dw)
###COMMIT###
git2r::config(user.name = "awp-finanznachrichten",user.email = "sw@awp.ch")
token <- read.csv("C:/Users/sw/OneDrive/Github_Token/token.txt",header=FALSE)[1,1]
git2r::cred_token(token)
gitadd()
gitcommit()
gitpush()
library(git2r)
library(httr)
library(XML)
library(xlsx)
library(jsonlite)
library(dplyr)
library(readr)
library(stringi)
library(stringr)
library(DatawRappr)
library(lubridate)
#Working Directory
setwd("C:/Users/sw/OneDrive/sda_eidgenoessische_wahlen_datafeed")
#Main Data URL from BFS
BFS_API_URL <-
"https://ckan.ogdch-abnahme.clients.liip.ch/api/3/action/package_show?id=eidg-wahlen-2023"
#BFS_API_URL <- "https://ckan.opendata.swiss/api/3/action/package_show?id=eidg-wahlen-2023"
#Datawrapper Auth
datawrapper_auth(Sys.getenv("DW_KEY"), overwrite = TRUE)
#Functions
setwd("./Functions")
source("storyfinder.R")
source("storyfinder_urlena.R")
source("storybuilder.R")
source("add_texts.R")
source("replace_variables_urlena.R")
source("replace_variables_cleanup.R")
source("replace_variables_cleanup_SR.R")
source("winners_losers.R")
source("voted_out_candidates.R")
source("text_charts.R")
source("create_tables_NR.R")
source("create_tables_SR.R")
source("create_tables_overview.R")
source("create_table_communities.R")
source("create_bilddaten.R")
source("create_visual_data.R")
source("function_reports.R")
source("github.R")
setwd("..")
source("./tools/Funktionen/Utils.R")
#Texts
texts_spreadsheet_NR_results <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Sitzverteilung")
texts_spreadsheet_NR_candidates <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Gewaehlte")
texts_spreadsheet_SR_candidates <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "SR_Resultate")
texts_spreadsheet_NR_intermediate <- read.xlsx("./Texte/Eidgenössische Wahlen 2023_ Textbausteine.xlsx",sheetName = "NR_Zwischenstand")
texts_spreadsheet_UrLena <- read.xlsx("./Texte/LENA Textbausteine Eidgenössische Wahlen 2023_ Gemeindeebene.xlsx", sheetName = "Textbausteine")
texts_spreadsheet_UrLena <- texts_spreadsheet_UrLena %>%
filter(is.na(Text_d) == FALSE)
#Metadata Communities
meta_gmd_kt <- read_csv("Data/MASTERFILE_GDE.csv")
#####START LOOP#####
#Flags
NR_new_results <- FALSE
NR_new_elected <- FALSE
SR_new_elected <- FALSE
#Load Databases
source("load_databases.R")
###Get BFS Data and update DB
source("NR_get_data_results.R")
source("NR_get_data_candidates.R")
#source("SR_get_data_candidates.R") #TO DO
#Load Databases again
source("load_databases.R")
##Check: Canton completed?
#Get counted cantons
counted_cantons_all <- election_metadata %>%
filter(date == "2023-10-22",
grepl("finished",status) == TRUE #CHANGE TO TRUE
)
#Merge with area, text and output overview
counted_cantons_all <- counted_cantons_all  %>%
left_join(areas_metadata) %>%
left_join(status_texts) %>%
left_join(output_overview) %>%
filter(area_type == "canton")
###NATIONALRAT###
counted_cantons <- counted_cantons_all %>%
filter(council == "NR")
c <- 1
#Generate Output
source("NR_text_results.R")
#Generate Output
source("NR_text_candidates.R")
#Generate Output
source("NR_prepare_results_charts.R")
text_chart
texts_chart
View(results_parties)
